/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

subprojects {
    apply plugin: 'java'

    ext {
        lombokVersion = '1.18.30'
        springBootVersion = '3.4.4'
        eclipseLinkVersion = '4.0.2'
    }

    dependencies {
        // Common dependencies for all crediblex modules
        implementation(project(':fineract-core'))
        implementation(project(':fineract-provider'))
        implementation("org.springframework.boot:spring-boot-starter:${springBootVersion}")
        compileOnly("org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}")

        // Add Spring Data JPA to all modules that need it
        implementation("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}") {
            exclude group: 'org.hibernate'
        }

        implementation("org.eclipse.persistence:org.eclipse.persistence.jpa:${eclipseLinkVersion}")
        implementation ("org.slf4j:log4j-over-slf4j")
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        testImplementation(project(':fineract-provider'))
        testImplementation("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")
        testImplementation("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
        testImplementation ("org.jacoco:org.jacoco.agent:0.8.12:runtime")
        testImplementation ("org.slf4j:log4j-over-slf4j")
    }

}


